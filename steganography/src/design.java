/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import org.opencv.core.Mat;
public class design extends javax.swing.JFrame {

    /**
     * Creates new form design
     */
    public design() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jSP = new javax.swing.JScrollPane();
        jSP2 = new javax.swing.JScrollPane();
        jSP3 = new javax.swing.JScrollPane();
        LI1 = new javax.swing.JButton();
        LI2 = new javax.swing.JButton();
        clear1 = new javax.swing.JButton();
        clear2 = new javax.swing.JButton();
        hide = new javax.swing.JButton();
        clear3 = new javax.swing.JButton();
        hide1 = new javax.swing.JButton();
        hide2 = new javax.swing.JButton();
        restore2 = new javax.swing.JButton();
        jSP4 = new javax.swing.JScrollPane();
        restore3 = new javax.swing.JButton();
        restore1 = new javax.swing.JButton();
        clear4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 1632));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(1500, 1632));

        jPanel1.setPreferredSize(new java.awt.Dimension(838, 1643));

        LI1.setText("Load img1");
        LI1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LI1ActionPerformed(evt);
            }
        });

        LI2.setText("Load img2");
        LI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LI2ActionPerformed(evt);
            }
        });

        clear1.setText("clear img1");
        clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear1ActionPerformed(evt);
            }
        });

        clear2.setText("clear img2");
        clear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear2ActionPerformed(evt);
            }
        });

        hide.setText("Hide in 1 bit");
        hide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideActionPerformed(evt);
            }
        });

        clear3.setText("clear result");
        clear3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear3ActionPerformed(evt);
            }
        });

        hide1.setText("Hide in 2 bits");
        hide1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hide1ActionPerformed(evt);
            }
        });

        hide2.setText("Hide in 3 bits");
        hide2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hide2ActionPerformed(evt);
            }
        });

        restore2.setText("restore");
        restore2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restore2ActionPerformed(evt);
            }
        });

        jSP4.setVisible(false);

        restore3.setText("restore");
        restore3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restore3ActionPerformed(evt);
            }
        });

        restore1.setText("restore");
        restore1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restore1ActionPerformed(evt);
            }
        });

        clear4.setText("clear restore");
        clear4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSP, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LI1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSP2, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSP3, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSP4, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LI2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(hide2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(hide1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(hide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(restore2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(restore3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(restore1)))
                            .addComponent(clear4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(LI1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSP, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSP2, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(LI2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hide, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restore1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hide1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restore2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hide2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restore3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(clear3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clear4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSP3, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSP4, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 857, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1493, Short.MAX_VALUE)
                .addGap(119, 119, 119))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    JLabel jlab= new JLabel();
JLabel jlab2= new JLabel();
JLabel jlab3= new JLabel();
JLabel jlab4= new JLabel();
String path1,path2;

    private void LI1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LI1ActionPerformed
        // TODO add your handling code here:
         JFileChooser jfc = new JFileChooser();
        if(jfc.showOpenDialog(jSP) == JFileChooser.APPROVE_OPTION){
            java.io.File f= jfc.getSelectedFile();
            path1=f.getAbsolutePath();
             ImageIcon m= new ImageIcon(f.toString());
             //Image im= m.getImage();
             //Image newImage = im.getScaledInstance(600, 400, Image.SCALE_DEFAULT);
             //ImageIcon icon = new ImageIcon(newImage);
             jlab.setIcon(m);
            jlab.setHorizontalAlignment(JLabel.CENTER);
            jSP.getViewport().add(jlab);
            
            
            
        }
    }//GEN-LAST:event_LI1ActionPerformed

    private void clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear1ActionPerformed
        // TODO add your handling code here:
         jlab.setIcon(null);
    }//GEN-LAST:event_clear1ActionPerformed
        BufferedImage bImage = null;
             BufferedImage bImage2 = null;
               BufferedImage bImage1=null;
        BufferedImage bImage22=null;
         BufferedImage bImagefinal=null;
         BufferedImage resImage = null;
    private void hideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideActionPerformed
        // TODO add your handling code here:
        
     
    
        try {
            bImage = ImageIO.read(new File(path1));
            bImage2 = ImageIO.read(new File(path2));
         
        } catch (IOException ex) {
            Logger.getLogger(design.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    
         
bImage1= new BufferedImage(bImage.getWidth(), bImage.getHeight(), BufferedImage.TYPE_INT_RGB);
bImage22= new BufferedImage(bImage2.getWidth(), bImage2.getHeight(), BufferedImage.TYPE_INT_RGB);
         bImagefinal = new BufferedImage(bImage.getWidth(), bImage.getHeight(), BufferedImage.TYPE_INT_RGB);
         
   // bImage1.getGraphics().drawImage(bImage, 0, 0, null);
     for(int y = 0; y < bImage.getWidth(); y++){
            for(int x = 0; x < bImage.getHeight(); x++){
                Color c= new Color(bImage.getRGB(y,x));
                int r= c.getRed() &0xfe;
                int g= c.getGreen() &0xfe;
                int b= c.getBlue() &0xfe;
                Color nc = new Color(r,g,b); 
                bImage1.setRGB(y,x,nc.getRGB());
            }
     }
             
     
              for (int k = 0; k < bImage2.getWidth(); k++){
             for (int m = 0; m < bImage2.getHeight(); m++){
             Color c1= new Color(bImage2.getRGB(k, m));
            int red = c1.getRed() & 0xfc;
            Color greyim = new Color(red,red,red); 
                bImage22.setRGB(k,m,greyim.getRGB());
           

             }}
             
              bImagefinal.getGraphics().drawImage(bImage1, 0, 0, null);
              for(int y = 0; y < bImage1.getHeight(); y++){
                  for(int x = 0; x < bImage1.getWidth(); x++){
                      bImagefinal.setRGB(x,y, bImage1.getRGB(x,y));
                  }
              }
              for (int l = 0; l < bImage22.getHeight(); l++){
                 
                  for (int k = 0; k < bImage1.getWidth(); k=k+2){
                      
                      Color color1 = new Color(bImage1.getRGB(k, l));
                      Color color11 = new Color(bImage1.getRGB(k+1, l));
                      Color color2 = new Color(bImage22.getRGB(k/2, l));
                      
                      
                      int p1 = (color2.getRed() &0x80) >> 7;
                      int p2 = (color2.getRed() &0x40) >> 6;
                      int p3 = (color2.getRed() &0x20) >> 5;
                      int p4 = (color2.getRed() &0x10) >> 4;
                      int p5 = (color2.getRed() &0x08) >> 3;
                      int p6 = (color2.getRed() &0x04) >> 2;
                      int rf1= color1.getRed() | p1;
                      int gf1= color1.getGreen() | p2;
                      int bf1= color1.getBlue() | p3;
                      int rf2= color11.getRed() | p4;
                      int gf2= color11.getGreen() | p5;
                      int bf2= color11.getBlue() | p6;
                      
                      Color finalim1 = new Color(rf1,gf1,bf1);
                      bImagefinal.setRGB(k,l,finalim1.getRGB());
                      Color finalim2 = new Color(rf2,gf2,bf2);
                      bImagefinal.setRGB(k+1,l,finalim2.getRGB());
                      
                      
                  }
              }
              //             File fof= new File("C:\\Users\\HP\\Desktop\\new11.jpg");
              //   File fof2= new File("C:\\Users\\HP\\Desktop\\new22.jpg");
              //   File final_image= new File("C:\\Users\\HP\\Desktop\\finalplease.jpg");
              //  ImageIO.write(bImage1,"jpg",fof);
              //  ImageIO.write(bImage22,"jpg",fof2);
              //  ImageIO.write(bImagefinal,"jpg",final_image);
              ImageIcon icon1 = new ImageIcon(bImagefinal);
              jlab3.setIcon(icon1);
              jlab3.setHorizontalAlignment(JLabel.CENTER);
              jSP3.getViewport().add(jlab3);
             System.out.println("doneeeeeeeeeeee");
              
              //   ImageIO.write(finalim,"jpg",final_image);
        
    }//GEN-LAST:event_hideActionPerformed

    private void clear3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear3ActionPerformed
        // TODO add your handling code here:
        jlab3.setIcon(null);
    }//GEN-LAST:event_clear3ActionPerformed

    private void clear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear2ActionPerformed
 jlab2.setIcon(null);
 // TODO add your handling code here:
    }//GEN-LAST:event_clear2ActionPerformed

    private void LI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LI2ActionPerformed
        // TODO add your handling code here:
             JFileChooser jfc = new JFileChooser();
              if(jfc.showOpenDialog(jSP) == JFileChooser.APPROVE_OPTION){
             java.io.File f= jfc.getSelectedFile();
             path2=f.getAbsolutePath();
             ImageIcon m= new ImageIcon(f.toString());
           // Image im= m.getImage();
            // Image newImage = im.getScaledInstance(600, 400, Image.SCALE_DEFAULT);
            // ImageIcon icon = new ImageIcon(newImage);
             jlab2.setIcon(m);
            jlab2.setHorizontalAlignment(JLabel.CENTER);
            jSP2.getViewport().add(jlab2);  
       
        }
    }//GEN-LAST:event_LI2ActionPerformed

    private void hide1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hide1ActionPerformed
        // TODO add your handling code here:
        
        try {
            bImage = ImageIO.read(new File(path1));
            bImage2 = ImageIO.read(new File(path2));
         
        } catch (IOException ex) {
            Logger.getLogger(design.class.getName()).log(Level.SEVERE, null, ex);
        }
     
bImage1= new BufferedImage(bImage.getWidth(), bImage.getHeight(), BufferedImage.TYPE_INT_RGB);
bImage22= new BufferedImage(bImage2.getWidth(), bImage2.getHeight(), BufferedImage.TYPE_INT_RGB);
         bImagefinal = new BufferedImage(bImage.getWidth(), bImage.getHeight(), BufferedImage.TYPE_INT_RGB);
         
   // bImage1.getGraphics().drawImage(bImage, 0, 0, null);
     for(int y = 0; y < bImage.getWidth(); y++){
            for(int x = 0; x < bImage.getHeight(); x++){
                Color c= new Color(bImage.getRGB(y,x));
                int r= c.getRed() &0xfc;
                int g= c.getGreen() &0xfc;
                int b= c.getBlue() &0xfc;
                Color nc = new Color(r,g,b); 
                bImage1.setRGB(y,x,nc.getRGB());
            }
     }
    
             
     
              for (int k = 0; k < bImage2.getWidth(); k++){
             for (int m = 0; m < bImage2.getHeight(); m++){
             Color c1= new Color(bImage2.getRGB(k, m));
            int red = c1.getRed() & 0xfc;
            Color greyim = new Color(red,red,red); 
                bImage22.setRGB(k,m,greyim.getRGB());
           

             }}
             
             bImagefinal.getGraphics().drawImage(bImage1, 0, 0, null);
             for(int y = 0; y < bImage1.getHeight(); y++){
                 for(int x = 0; x < bImage1.getWidth(); x++){
                     bImagefinal.setRGB(x,y, bImage1.getRGB(x,y));
                 }
             }
            
             for (int l = 0; l < bImage22.getHeight(); l++){
                 for (int k = 0; k < bImage22.getWidth(); k++){
                     
                     Color color1 = new Color(bImage1.getRGB(k, l));
                     Color color2 = new Color(bImage22.getRGB(k, l));
                     
                     int p1 = (color2.getRed() &0xc0) >> 6;
                     int p2 = (color2.getRed() &0x30) >> 4;
                     int p3 = (color2.getRed() &0x0c) >> 2;
                     
                     int rf1= color1.getRed() | p1;
                     int gf1= color1.getGreen() | p2;
                     int bf1= color1.getBlue() | p3;
                     
                   
                     
                     Color finalim1 = new Color(rf1,gf1,bf1);
                     bImagefinal.setRGB(k,l,finalim1.getRGB());
                     
                     
                 }
             }
             
             // File fof= new File("C:\\Users\\HP\\Desktop\\new11.jpg");
             // File fof2= new File("C:\\Users\\HP\\Desktop\\new12.jpg");
             // File final_image= new File("C:\\Users\\HP\\Desktop\\final1.jpg");
             // ImageIO.write(bImage1,"jpg",fof);
             // ImageIO.write(bImage22,"jpg",fof2);
             // ImageIO.write(bImagefinal,"jpg",final_image);
             ImageIcon icon1 = new ImageIcon(bImagefinal);
             jlab3.setIcon(icon1);
             jlab3.setHorizontalAlignment(JLabel.CENTER);
             jSP3.getViewport().add(jlab3);
             System.out.println("doneeeeeeeeeeee");
             
             //   ImageIO.write(finalim,"jpg",final_image);
        
    }//GEN-LAST:event_hide1ActionPerformed

    private void hide2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hide2ActionPerformed
        // TODO add your handling code here:
         
        try {
            bImage = ImageIO.read(new File(path1));
            bImage2 = ImageIO.read(new File(path2));
         
        } catch (IOException ex) {
            Logger.getLogger(design.class.getName()).log(Level.SEVERE, null, ex);
        }
     
bImage1= new BufferedImage(bImage.getWidth(), bImage.getHeight(), BufferedImage.TYPE_INT_RGB);
bImage22= new BufferedImage(bImage2.getWidth(), bImage2.getHeight(), BufferedImage.TYPE_INT_RGB);
         bImagefinal = new BufferedImage(bImage.getWidth(), bImage.getHeight(), BufferedImage.TYPE_INT_RGB);
         
   // bImage1.getGraphics().drawImage(bImage, 0, 0, null);
     for(int y = 0; y < bImage.getWidth(); y++){
            for(int x = 0; x < bImage.getHeight(); x++){
                Color c= new Color(bImage.getRGB(y,x));
                int r= c.getRed() &0xf8;
                int g= c.getGreen() &0xf8;
                int b= c.getBlue() ;
                Color nc = new Color(r,g,b); 
                bImage1.setRGB(y,x,nc.getRGB());
            }
     }
     
             
     
              for (int k = 0; k < bImage2.getWidth(); k++){
             for (int m = 0; m < bImage2.getHeight(); m++){
             Color c1= new Color(bImage2.getRGB(k, m));
            int red = c1.getRed() & 0xfc;
            Color greyim = new Color(red,red,red); 
                bImage22.setRGB(k,m,greyim.getRGB());
           

             }}
             
             bImagefinal.getGraphics().drawImage(bImage1, 0, 0, null);
             for(int y = 0; y < bImage1.getHeight(); y++){
                 for(int x = 0; x < bImage1.getWidth(); x++){
                     bImagefinal.setRGB(x,y, bImage1.getRGB(x,y));
                 }
             }
             
             for (int l = 0; l < bImage22.getHeight(); l++){
                 for (int k = 0; k < bImage22.getWidth(); k++){
                     
                     Color color1 = new Color(bImage1.getRGB(k, l));
                     Color color2 = new Color(bImage22.getRGB(k, l));
                     
                     int p1 = (color2.getRed() &0xe0) >> 5;
                     int p2 = (color2.getRed() &0x1c) >> 2;
                     
                     
                     int rf1= color1.getRed() | p1;
                     int gf1= color1.getGreen() | p2;
                     int bf1= color1.getBlue();
                     
                     Color finalim1 = new Color(rf1,gf1,bf1);
                     bImagefinal.setRGB(k,l,finalim1.getRGB());
                     
                     
                 }
             }
            
             //      File fof= new File("C:\\Users\\HP\\Desktop\\new3.jpg");
             //     File fof2= new File("C:\\Users\\HP\\Desktop\\new3.jpg");
             //    File final_image= new File("C:\\Users\\HP\\Desktop\\final3.jpg");
             //    ImageIO.write(bImage1,"jpg",fof);
             //   ImageIO.write(bImage22,"jpg",fof2);
             // ImageIO.write(bImagefinal,"jpg",final_image);
             ImageIcon icon1 = new ImageIcon(bImagefinal);
             jlab3.setIcon(icon1);
             jlab3.setHorizontalAlignment(JLabel.CENTER);
             jSP3.getViewport().add(jlab3);
             System.out.println("doneeeeeeeeeeee");
             
             //   ImageIO.write(finalim,"jpg",final_image);
 
    }//GEN-LAST:event_hide2ActionPerformed

    private void restore2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restore2ActionPerformed
        // TODO add your handling code here:
        jSP4.setVisible(true);
         resImage =new BufferedImage(bImage2.getWidth(), bImage2.getHeight(), BufferedImage.TYPE_INT_RGB);
        
           for (int l = 0; l < bImage22.getHeight(); l++){
             for (int k = 0; k < bImage22.getWidth(); k++){
                  Color colorres1 = new Color(bImagefinal.getRGB(k, l));
                  Color colorres2 = new Color(bImagefinal.getRGB(k, l));
                  
             
int p1 = (colorres1.getRed() &0x03) << 6;
int p2 = (colorres1.getGreen() &0x03) << 4;
int p3 = (colorres1.getBlue() &0x03) << 2;

int f=p1|p2|p3;


                Color finalim11 = new Color(f,f,f); 
                resImage.setRGB(k,l,finalim11.getRGB());

             }
             }  
           //  ImageIO.write(resImage,"jpg",res);
           
           ImageIcon icon1 = new ImageIcon(resImage);
           jlab4.setIcon(icon1);
           jlab4.setHorizontalAlignment(JLabel.CENTER);
           jSP4.getViewport().add(jlab4);
           System.out.println("doneeeeeeeeeeee");
        
    }//GEN-LAST:event_restore2ActionPerformed

    private void restore3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restore3ActionPerformed
        // TODO add your handling code here:
        jSP4.setVisible(true);
         resImage =new BufferedImage(bImage2.getWidth(), bImage2.getHeight(), BufferedImage.TYPE_INT_RGB);
        
           for (int l = 0; l < bImage22.getHeight(); l++){
             for (int k = 0; k < bImage22.getWidth(); k++){
                  Color colorres1 = new Color(bImagefinal.getRGB(k, l));
                  Color colorres2 = new Color(bImagefinal.getRGB(k, l));
                  
             
int p1 = (colorres1.getRed() &0x07) << 5;
int p2 = (colorres1.getGreen() &0x07) << 2;

int f=p1|p2;


                Color finalim11 = new Color(f,f,f); 
                resImage.setRGB(k,l,finalim11.getRGB());

             }
             }  
           // ImageIO.write(resImage,"jpg",res);
           
           ImageIcon icon1 = new ImageIcon(resImage);
           jlab4.setIcon(icon1);
           jlab4.setHorizontalAlignment(JLabel.CENTER);
           jSP4.getViewport().add(jlab4);
           System.out.println("doneeeeeeeeeeee");
    }//GEN-LAST:event_restore3ActionPerformed

    private void restore1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restore1ActionPerformed
        // TODO add your handling code here:
          jSP4.setVisible(true);
          resImage=new BufferedImage(bImage2.getWidth(), bImage2.getHeight(), BufferedImage.TYPE_INT_RGB);
        
            for (int l = 0; l < bImage22.getHeight(); l++){
             for (int k = 0; k < bImage1.getWidth(); k=k+2){
                  Color colorres1 = new Color(bImagefinal.getRGB(k, l));
                  Color colorres2 = new Color(bImagefinal.getRGB(k+1, l));
                  
             
int p1 = (colorres1.getRed() &0x01) << 7;
int p2 = (colorres1.getGreen() &0x01) << 6;
int p3 = (colorres1.getBlue() &0x01) << 5;

int p4 = (colorres2.getRed() &0x10) << 4;
int p5 = (colorres2.getGreen() &0x01) << 3;
int p6 = (colorres2.getBlue() &0x01) << 2;


int f=p1|p2|p3;
      
 
                Color finalim11 = new Color(f,f,f); 
                resImage.setRGB(k/2,l,finalim11.getRGB());
                
           
      
             }
             }  
            // ImageIO.write(resImage,"jpg",res);
            ImageIcon icon1 = new ImageIcon(resImage);
            jlab4.setIcon(icon1);
            jlab4.setHorizontalAlignment(JLabel.CENTER);
            jSP4.getViewport().add(jlab4);
            System.out.println("doneeeeeeeeeeee");
        
    }                                        

                                         

                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new design().setVisible(true);

            }
        });
    }//GEN-LAST:event_restore1ActionPerformed

    private void clear4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear4ActionPerformed
        // TODO add your handling code here:
        jlab4.setIcon(null);
    }//GEN-LAST:event_clear4ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LI1;
    private javax.swing.JButton LI2;
    private javax.swing.JButton clear1;
    private javax.swing.JButton clear2;
    private javax.swing.JButton clear3;
    private javax.swing.JButton clear4;
    private javax.swing.JButton hide;
    private javax.swing.JButton hide1;
    private javax.swing.JButton hide2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jSP;
    private javax.swing.JScrollPane jSP2;
    private javax.swing.JScrollPane jSP3;
    private javax.swing.JScrollPane jSP4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton restore1;
    private javax.swing.JButton restore2;
    private javax.swing.JButton restore3;
    // End of variables declaration//GEN-END:variables
}
